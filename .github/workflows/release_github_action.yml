name: Build and Release snaprepo

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build snaprepo binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install dependencies
        run: |
          poetry install --no-dev

      - name: Build binary with PyInstaller
        run: |
          poetry run pip install --upgrade pyinstaller
          poetry run pyinstaller snaprepo.spec --clean

      - name: Archive binaries
        run: |
          mkdir -p build_artifacts
          if [[ $RUNNER_OS == 'macOS' ]]; then
            mv dist/snaprepo build_artifacts/snaprepo-${{ github.ref_name }}-macos-amd64
          else
            mv dist/snaprepo build_artifacts/snaprepo-${{ github.ref_name }}-linux-amd64
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          # Unique artifact names per OS:
          name: snaprepo-${{ matrix.os }}
          path: build_artifacts

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          # Omit "name:" to get everything
          path: ./release_artifacts

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_artifacts/snaprepo-ubuntu-latest/snaprepo-${{ github.ref_name }}-linux-amd64
          asset_name: snaprepo-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_artifacts/snaprepo-macos-latest/snaprepo-${{ github.ref_name }}-macos-amd64
          asset_name: snaprepo-${{ github.ref_name }}-macos-amd64
          asset_content_type: application/octet-stream
